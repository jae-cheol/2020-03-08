초기화
메소드 내부의 변수는 초기화를 해줘야 한다.
클래스 내부의 변수는 타입에 맞게 알아서 초기화가 된다.

static : 전역변수, 전역함수
 - static으로 지정한 함수들안에서 쓰는 멤버변수는 static으로 선언되어야함.
 - static메소드안에 non-static변수는 사용불가.
 - static메소드는 객체 생성안하고 사용할수있음.
 - 객체를 생성하지 않고도 사용할 수 있는 멤버를 static멤버라고 부른다.
 - static멤버는 클래스당 하나만 생성되는 멤버로서 동일한 클래스의 모든 객체들이 공유한다.(꼭 공유해야 하는것만 static을 써야함.)
  :클래스당 하나씩 생긴다고 해서 클래스 멤버라고도 부른다.
  :non-static멤버는 각 객체마다 하나씩 생긴다고해서 인스턴스 멤버라고 부른다.
 - 어떤 객체도 생성되기 전 프로그램을 시작할 때 이미 생성된다.
  :그러므로 객체를 생성하기 전에도 static 멤버는 사용할 수 있다.
 - static 메소드는 오직 static 멤버만 접근할 수 있다.
  :static 메소드는 객체가 생성되지 않은 상황에서도 사용이 가능하므로 객체에 속한 인스턴스 메소드, 인스턴스 변수 등을 사용할 수 없다.
  	다만 static 멤버들만 사용 가능하다.
  	그러나 인스턴스 메소드는 static 멤버들을 모두 사용할 수 있다.
 - static 메소드에서는 this 키워드를 사용할 수 없다.
  :static 메소드는 객체가 생성되지 않은 상황에서도 클래스 이름을 이용하여 호출이 가능하기 때문에
	호출 당시 실행 중인 객체를 가리키는 this 레퍼런스를 사용할 수 없다.
	
	
	
 /**
 * 버퍼 : 데이터를 일시적으로 저장하기 위한 공간을 의미한다.
 * 자바에서 입출력 스트림들은 운영체제API를 호출하여 입출력장치와 응용프로그램 사이에서 데이터가 전송되도록 하는데
 * 버퍼가 없이 많은 양의 데이터를 입출력 할시에는 그만큼 자주 운영체제 API가 호출되고 또한 그만큼 실행속도가 떨어질 것이다.
 * 어느정도 모아뒀다가 한번에 처리를 하는것이 많은 양을 처리할 땐 더 빠르다는 것이다.
 * 비유 => 물 10L를 우물에서 퍼와야 하는데 조그마한 양치컵을 들고 수십번 왔다갔다 하는것보단
 *  커다란 약수통 하나 들고가서 몇번 나르는게 더 효율적인 느낌이다.
 * 주의점 : flush()를 사용해줘야 한다.
 *  버퍼가 꽉 찼을 때만 출력되는 특징으로 인해 프로그램에서 데이터를 출력했지만 버퍼에 들어있어 내 모니터에 안보일 수도 있기 때문이다.
 * 둘 다 IOException을 발생시킬 수 있으므로
 *  try-catch문 / throws를 하던 처리를 해줘야 한다.
 *
 */
 
 
 int d2 = ch+ch2;	// char의 연산은 int형이 됨.